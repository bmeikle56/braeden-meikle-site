{"ast":null,"code":"const BASE_URL = `${process.env.SERVER_BASE_URL}`;\nasync function getUnread() {\n  const baseURL = `${BASE_URL}/getUnread`;\n  const user = 'user2';\n  const url = `http://localhost:8000/getUnread?user=user2`; //`${baseURL}?user=${user}`\n\n  const body = {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Cache-Control': 'no-cache'\n    }\n  };\n  console.log('constructed req');\n  fetch(url, body).then(response => {\n    return response.json;\n  });\n\n  // try {\n  //   const response = await fetch(url, body)\n  //   if (!response.ok) {\n  //     throw new Error(`Response status: ${response.status}`)\n  //   }\n  //   console.log('res received')\n  //   console.log(response.json)\n  //   //response.json().then(res => {return res})\n  //   //return response.json\n  // } catch (error) {\n  //   console.log(error.message)\n  // }\n}\nasync function markRead(index) {\n  const baseURL = `${BASE_URL}/read`;\n  const user = 'user2';\n  const url = `${baseURL}?user=${user}?read=${index}`;\n  const body = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'text/json'\n    }\n  };\n  console.log('constructed req');\n  try {\n    const response = await fetch(url, body);\n    if (!response.ok) {\n      throw new Error(`Response status: ${response.status}`);\n    }\n    console.log('res received');\n    console.log(response.json);\n    return response;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\nexport { getUnread, markRead };","map":{"version":3,"names":["BASE_URL","process","env","SERVER_BASE_URL","getUnread","baseURL","user","url","body","method","headers","console","log","fetch","then","response","json","markRead","index","ok","Error","status","error","message"],"sources":["/Users/braedenmeikle/Documents/repo/braeden-meikle-site/client/src/api.js"],"sourcesContent":["\nconst BASE_URL = `${process.env.SERVER_BASE_URL}`\n\nasync function getUnread() {\n  const baseURL = `${BASE_URL}/getUnread`\n  const user = 'user2'\n  const url =  `http://localhost:8000/getUnread?user=user2` //`${baseURL}?user=${user}`\n\n  const body = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Cache-Control': 'no-cache'\n      } \n  }\n\n  console.log('constructed req')\n\n  fetch(url, body).then(response => {\n    return response.json\n  })\n\n  // try {\n  //   const response = await fetch(url, body)\n  //   if (!response.ok) {\n  //     throw new Error(`Response status: ${response.status}`)\n  //   }\n  //   console.log('res received')\n  //   console.log(response.json)\n  //   //response.json().then(res => {return res})\n  //   //return response.json\n  // } catch (error) {\n  //   console.log(error.message)\n  // }\n}\n\nasync function markRead(index) {\n  const baseURL = `${BASE_URL}/read`\n  const user = 'user2'\n  const url = `${baseURL}?user=${user}?read=${index}`\n\n  const body = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'text/json'\n      } \n  }\n\n  console.log('constructed req')\n\n  try {\n    const response = await fetch(url, body)\n    if (!response.ok) {\n      throw new Error(`Response status: ${response.status}`)\n    }\n    console.log('res received')\n    console.log(response.json)\n    return response\n  } catch (error) {\n    console.log(error.message)\n  }\n}\n\nexport { getUnread, markRead }"],"mappings":"AACA,MAAMA,QAAQ,GAAG,GAAGC,OAAO,CAACC,GAAG,CAACC,eAAe,EAAE;AAEjD,eAAeC,SAASA,CAAA,EAAG;EACzB,MAAMC,OAAO,GAAG,GAAGL,QAAQ,YAAY;EACvC,MAAMM,IAAI,GAAG,OAAO;EACpB,MAAMC,GAAG,GAAI,4CAA4C,EAAC;;EAE1D,MAAMC,IAAI,GAAG;IACTC,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAE;IACnB;EACJ,CAAC;EAEDC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;EAE9BC,KAAK,CAACN,GAAG,EAAEC,IAAI,CAAC,CAACM,IAAI,CAACC,QAAQ,IAAI;IAChC,OAAOA,QAAQ,CAACC,IAAI;EACtB,CAAC,CAAC;;EAEF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF;AAEA,eAAeC,QAAQA,CAACC,KAAK,EAAE;EAC7B,MAAMb,OAAO,GAAG,GAAGL,QAAQ,OAAO;EAClC,MAAMM,IAAI,GAAG,OAAO;EACpB,MAAMC,GAAG,GAAG,GAAGF,OAAO,SAASC,IAAI,SAASY,KAAK,EAAE;EAEnD,MAAMV,IAAI,GAAG;IACTC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACJ,CAAC;EAEDC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;EAE9B,IAAI;IACF,MAAMG,QAAQ,GAAG,MAAMF,KAAK,CAACN,GAAG,EAAEC,IAAI,CAAC;IACvC,IAAI,CAACO,QAAQ,CAACI,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,oBAAoBL,QAAQ,CAACM,MAAM,EAAE,CAAC;IACxD;IACAV,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;IAC3BD,OAAO,CAACC,GAAG,CAACG,QAAQ,CAACC,IAAI,CAAC;IAC1B,OAAOD,QAAQ;EACjB,CAAC,CAAC,OAAOO,KAAK,EAAE;IACdX,OAAO,CAACC,GAAG,CAACU,KAAK,CAACC,OAAO,CAAC;EAC5B;AACF;AAEA,SAASnB,SAAS,EAAEa,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}