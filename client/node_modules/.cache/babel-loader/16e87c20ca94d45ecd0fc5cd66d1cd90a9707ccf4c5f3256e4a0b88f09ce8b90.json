{"ast":null,"code":"var _jsxFileName = \"/Users/braedenmeikle/Documents/repo/braeden-meikle-site/client/src/components/App.js\",\n  _s = $RefreshSig$();\nimport '../styles/global.css';\nimport React, { useState, useEffect } from 'react';\nimport { pages } from '../data/consts.js';\nimport { Fun } from './Fun.js';\nimport { AnimatedSidebar } from './Sidebar.js';\nimport { Articles } from './Articles.js';\nimport { Footer } from './Footer.js';\nimport { Loading } from './Loading.js';\nimport { Portfolio } from './Portfolio.js';\nimport { VDivider } from './Vdiv.js';\nimport { getUnread } from '../api.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Body() {\n  _s();\n  /* Data fetched from backend that will be passed to component before render */\n  const [data, setData] = useState(null);\n\n  /* We init our app to loading state */\n  const [isLoading, setLoading] = useState(true);\n\n  // useEffect(() => {\n  //   const user = Math.floor(Math.random()*2) === 1 ? 'user7' : 'user2'\n  //   const service = '/getUnread'\n  //   const url =  `${process.env.REACT_APP_SERVER_BASE_URL}${service}?user=${user}`\n\n  //   const body = {\n  //       method: 'GET',\n  //       headers: {\n  //         'Content-Type': 'application/json',\n  //         'Cache-Control': 'no-cache'\n  //       } \n  //   }\n\n  //   fetch(url, body).then(res => res.json()).then(d => { \n  //     setData(d)\n  //     console.log(d)\n  //     setLoading(false)\n  //   })\n  // }, [])\n\n  // if (isLoading) {\n  //   return <Loading/>\n  // }\n\n  return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 11\n  }, this)\n  // <body>\n  //   <AnimatedSidebar pages={pages}/>\n  //   <div id='fun'>\n  //     <Fun/>\n  //   </div>\n  //   <VDivider/>\n  //   <div id='portfolio'>\n  //     <Portfolio/>\n  //   </div>\n  //   <VDivider/>\n  //   <div id='articles'>\n  //     <Articles unreadList={data.unreadList}/>\n  //   </div>\n  //   <VDivider/>\n  //   <div style={{display:'flex', justifyContent:'center'}}>\n  //     <Footer/>\n  //   </div>\n  // </body>\n  ;\n}\n_s(Body, \"j8W09vYjr9Xhi/8NcMXYDDcrHBM=\");\n_c = Body;\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(Body, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 10\n  }, this);\n}\n_c2 = App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Body\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","pages","Fun","AnimatedSidebar","Articles","Footer","Loading","Portfolio","VDivider","getUnread","jsxDEV","_jsxDEV","Body","_s","data","setData","isLoading","setLoading","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_c2","$RefreshReg$"],"sources":["/Users/braedenmeikle/Documents/repo/braeden-meikle-site/client/src/components/App.js"],"sourcesContent":["\nimport '../styles/global.css'\nimport React, { useState, useEffect } from 'react'\nimport { \n  pages,\n} from '../data/consts.js'\nimport { Fun } from './Fun.js'\nimport { AnimatedSidebar } from './Sidebar.js'\nimport { Articles } from './Articles.js'\nimport { Footer } from './Footer.js'\nimport { Loading } from './Loading.js'\nimport { Portfolio } from './Portfolio.js'\nimport { VDivider } from './Vdiv.js'\nimport { getUnread } from '../api.js' \n\nfunction Body() {\n  /* Data fetched from backend that will be passed to component before render */\n  const [data, setData] = useState(null)\n\n  /* We init our app to loading state */\n  const [isLoading, setLoading] = useState(true)\n\n  // useEffect(() => {\n  //   const user = Math.floor(Math.random()*2) === 1 ? 'user7' : 'user2'\n  //   const service = '/getUnread'\n  //   const url =  `${process.env.REACT_APP_SERVER_BASE_URL}${service}?user=${user}`\n\n  //   const body = {\n  //       method: 'GET',\n  //       headers: {\n  //         'Content-Type': 'application/json',\n  //         'Cache-Control': 'no-cache'\n  //       } \n  //   }\n\n  //   fetch(url, body).then(res => res.json()).then(d => { \n  //     setData(d)\n  //     console.log(d)\n  //     setLoading(false)\n  //   })\n  // }, [])\n\n  // if (isLoading) {\n  //   return <Loading/>\n  // }\n\n  return (<Loading/>\n    // <body>\n    //   <AnimatedSidebar pages={pages}/>\n    //   <div id='fun'>\n    //     <Fun/>\n    //   </div>\n    //   <VDivider/>\n    //   <div id='portfolio'>\n    //     <Portfolio/>\n    //   </div>\n    //   <VDivider/>\n    //   <div id='articles'>\n    //     <Articles unreadList={data.unreadList}/>\n    //   </div>\n    //   <VDivider/>\n    //   <div style={{display:'flex', justifyContent:'center'}}>\n    //     <Footer/>\n    //   </div>\n    // </body>\n  )\n}\n\nexport default function App() {\n  return <Body/>\n}"],"mappings":";;AACA,OAAO,sBAAsB;AAC7B,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SACEC,KAAK,QACA,mBAAmB;AAC1B,SAASC,GAAG,QAAQ,UAAU;AAC9B,SAASC,eAAe,QAAQ,cAAc;AAC9C,SAASC,QAAQ,QAAQ,eAAe;AACxC,SAASC,MAAM,QAAQ,aAAa;AACpC,SAASC,OAAO,QAAQ,cAAc;AACtC,SAASC,SAAS,QAAQ,gBAAgB;AAC1C,SAASC,QAAQ,QAAQ,WAAW;AACpC,SAASC,SAAS,QAAQ,WAAW;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErC,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;;EAEtC;EACA,MAAM,CAACiB,SAAS,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;;EAE9C;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA,oBAAQY,OAAA,CAACL,OAAO;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC;EACf;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA;AAEJ;AAACR,EAAA,CAnDQD,IAAI;AAAAU,EAAA,GAAJV,IAAI;AAqDb,eAAe,SAASW,GAAGA,CAAA,EAAG;EAC5B,oBAAOZ,OAAA,CAACC,IAAI;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAChB;AAACG,GAAA,GAFuBD,GAAG;AAAA,IAAAD,EAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}