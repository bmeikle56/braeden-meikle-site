{"ast":null,"code":"const BASE_URL='http://localhost:8000';//`${process.env.SERVER_BASE_URL}`\nasync function getUnread(){const baseURL=`${BASE_URL}/getUnread`;const user='user2';const url=`${baseURL}?user=${user}`;const body={method:'GET',headers:{'Content-Type':'application/json','Cache-Control':'no-cache'}};fetch(url,body).then(res=>res.json()).then(d=>{return d;});}async function markRead(index){const baseURL=`${BASE_URL}/read`;const user='user2';const url=`${baseURL}?user=${user}?read=${index}`;const body={method:'POST',headers:{'Content-Type':'text/json'}};console.log('constructed req');try{const response=await fetch(url,body);if(!response.ok){throw new Error(`Response status: ${response.status}`);}console.log('res received');console.log(response.json);return response;}catch(error){console.log(error.message);}}export{getUnread,markRead};","map":{"version":3,"names":["BASE_URL","getUnread","baseURL","user","url","body","method","headers","fetch","then","res","json","d","markRead","index","console","log","response","ok","Error","status","error","message"],"sources":["/Users/braedenmeikle/Documents/repo/braeden-meikle-site/client/src/api.js"],"sourcesContent":["\nconst BASE_URL = 'http://localhost:8000' //`${process.env.SERVER_BASE_URL}`\n\nasync function getUnread() {\n  const baseURL = `${BASE_URL}/getUnread`\n  const user = 'user2'\n  const url =  `${baseURL}?user=${user}`\n\n  const body = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Cache-Control': 'no-cache'\n      } \n  }\n\n  fetch(url, body).then(res => res.json()).then(d => { return d })\n}\n\nasync function markRead(index) {\n  const baseURL = `${BASE_URL}/read`\n  const user = 'user2'\n  const url = `${baseURL}?user=${user}?read=${index}`\n\n  const body = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'text/json'\n      } \n  }\n\n  console.log('constructed req')\n\n  try {\n    const response = await fetch(url, body)\n    if (!response.ok) {\n      throw new Error(`Response status: ${response.status}`)\n    }\n    console.log('res received')\n    console.log(response.json)\n    return response\n  } catch (error) {\n    console.log(error.message)\n  }\n}\n\nexport { getUnread, markRead }"],"mappings":"AACA,KAAM,CAAAA,QAAQ,CAAG,uBAAuB,CAAC;AAEzC,cAAe,CAAAC,SAASA,CAAA,CAAG,CACzB,KAAM,CAAAC,OAAO,CAAG,GAAGF,QAAQ,YAAY,CACvC,KAAM,CAAAG,IAAI,CAAG,OAAO,CACpB,KAAM,CAAAC,GAAG,CAAI,GAAGF,OAAO,SAASC,IAAI,EAAE,CAEtC,KAAM,CAAAE,IAAI,CAAG,CACTC,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACP,cAAc,CAAE,kBAAkB,CAClC,eAAe,CAAE,UACnB,CACJ,CAAC,CAEDC,KAAK,CAACJ,GAAG,CAAEC,IAAI,CAAC,CAACI,IAAI,CAACC,GAAG,EAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CAACF,IAAI,CAACG,CAAC,EAAI,CAAE,MAAO,CAAAA,CAAC,CAAC,CAAC,CAAC,CAClE,CAEA,cAAe,CAAAC,QAAQA,CAACC,KAAK,CAAE,CAC7B,KAAM,CAAAZ,OAAO,CAAG,GAAGF,QAAQ,OAAO,CAClC,KAAM,CAAAG,IAAI,CAAG,OAAO,CACpB,KAAM,CAAAC,GAAG,CAAG,GAAGF,OAAO,SAASC,IAAI,SAASW,KAAK,EAAE,CAEnD,KAAM,CAAAT,IAAI,CAAG,CACTC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,WAClB,CACJ,CAAC,CAEDQ,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC,CAE9B,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAT,KAAK,CAACJ,GAAG,CAAEC,IAAI,CAAC,CACvC,GAAI,CAACY,QAAQ,CAACC,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,oBAAoBF,QAAQ,CAACG,MAAM,EAAE,CAAC,CACxD,CACAL,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC,CAC3BD,OAAO,CAACC,GAAG,CAACC,QAAQ,CAACN,IAAI,CAAC,CAC1B,MAAO,CAAAM,QAAQ,CACjB,CAAE,MAAOI,KAAK,CAAE,CACdN,OAAO,CAACC,GAAG,CAACK,KAAK,CAACC,OAAO,CAAC,CAC5B,CACF,CAEA,OAASrB,SAAS,CAAEY,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}