{"ast":null,"code":"const SERVER='';const SCHEME='http://';const PORT=5000;const BASE_URL=`${SCHEME}${SERVER}:${PORT}`;async function getUnread(){const baseURL=`${BASE_URL}/getUnread`;const user='user2';const url=`${baseURL}?user=${user}`;const body={method:'GET',headers:{'Content-Type':'text/json'}};console.log('constructed req');try{const response=await fetch(url,body);if(!response.ok){throw new Error(`Response status: ${response.status}`);}console.log('res received');console.log(response.json);return response;}catch(error){console.log(error.message);}}async function markRead(index){const baseURL=`${BASE_URL}/read`;const user='user2';const url=`${baseURL}?user=${user}?read=${index}`;const body={method:'POST',headers:{'Content-Type':'text/json'}};console.log('constructed req');try{const response=await fetch(url,body);if(!response.ok){throw new Error(`Response status: ${response.status}`);}console.log('res received');console.log(response.json);return response;}catch(error){console.log(error.message);}}export{getUnread,markRead};","map":{"version":3,"names":["SERVER","SCHEME","PORT","BASE_URL","getUnread","baseURL","user","url","body","method","headers","console","log","response","fetch","ok","Error","status","json","error","message","markRead","index"],"sources":["/Users/braedenmeikle/Documents/repo/braeden-meikle-site/client/src/api.js"],"sourcesContent":["\nconst SERVER = ''\nconst SCHEME = 'http://'\nconst PORT = 5000\n\nconst BASE_URL = `${SCHEME}${SERVER}:${PORT}`\n\nasync function getUnread() {\n  const baseURL = `${BASE_URL}/getUnread`\n  const user = 'user2'\n  const url = `${baseURL}?user=${user}`\n\n  const body = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'text/json'\n      } \n  }\n\n  console.log('constructed req')\n\n  try {\n    const response = await fetch(url, body)\n    if (!response.ok) {\n      throw new Error(`Response status: ${response.status}`)\n    }\n    console.log('res received')\n    console.log(response.json)\n    return response\n  } catch (error) {\n    console.log(error.message)\n  }\n}\n\nasync function markRead(index) {\n  const baseURL = `${BASE_URL}/read`\n  const user = 'user2'\n  const url = `${baseURL}?user=${user}?read=${index}`\n\n  const body = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'text/json'\n      } \n  }\n\n  console.log('constructed req')\n\n  try {\n    const response = await fetch(url, body)\n    if (!response.ok) {\n      throw new Error(`Response status: ${response.status}`)\n    }\n    console.log('res received')\n    console.log(response.json)\n    return response\n  } catch (error) {\n    console.log(error.message)\n  }\n}\n\nexport { getUnread, markRead }"],"mappings":"AACA,KAAM,CAAAA,MAAM,CAAG,EAAE,CACjB,KAAM,CAAAC,MAAM,CAAG,SAAS,CACxB,KAAM,CAAAC,IAAI,CAAG,IAAI,CAEjB,KAAM,CAAAC,QAAQ,CAAG,GAAGF,MAAM,GAAGD,MAAM,IAAIE,IAAI,EAAE,CAE7C,cAAe,CAAAE,SAASA,CAAA,CAAG,CACzB,KAAM,CAAAC,OAAO,CAAG,GAAGF,QAAQ,YAAY,CACvC,KAAM,CAAAG,IAAI,CAAG,OAAO,CACpB,KAAM,CAAAC,GAAG,CAAG,GAAGF,OAAO,SAASC,IAAI,EAAE,CAErC,KAAM,CAAAE,IAAI,CAAG,CACTC,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACP,cAAc,CAAE,WAClB,CACJ,CAAC,CAEDC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC,CAE9B,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAACP,GAAG,CAAEC,IAAI,CAAC,CACvC,GAAI,CAACK,QAAQ,CAACE,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,oBAAoBH,QAAQ,CAACI,MAAM,EAAE,CAAC,CACxD,CACAN,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC,CAC3BD,OAAO,CAACC,GAAG,CAACC,QAAQ,CAACK,IAAI,CAAC,CAC1B,MAAO,CAAAL,QAAQ,CACjB,CAAE,MAAOM,KAAK,CAAE,CACdR,OAAO,CAACC,GAAG,CAACO,KAAK,CAACC,OAAO,CAAC,CAC5B,CACF,CAEA,cAAe,CAAAC,QAAQA,CAACC,KAAK,CAAE,CAC7B,KAAM,CAAAjB,OAAO,CAAG,GAAGF,QAAQ,OAAO,CAClC,KAAM,CAAAG,IAAI,CAAG,OAAO,CACpB,KAAM,CAAAC,GAAG,CAAG,GAAGF,OAAO,SAASC,IAAI,SAASgB,KAAK,EAAE,CAEnD,KAAM,CAAAd,IAAI,CAAG,CACTC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,WAClB,CACJ,CAAC,CAEDC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC,CAE9B,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAACP,GAAG,CAAEC,IAAI,CAAC,CACvC,GAAI,CAACK,QAAQ,CAACE,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,oBAAoBH,QAAQ,CAACI,MAAM,EAAE,CAAC,CACxD,CACAN,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC,CAC3BD,OAAO,CAACC,GAAG,CAACC,QAAQ,CAACK,IAAI,CAAC,CAC1B,MAAO,CAAAL,QAAQ,CACjB,CAAE,MAAOM,KAAK,CAAE,CACdR,OAAO,CAACC,GAAG,CAACO,KAAK,CAACC,OAAO,CAAC,CAC5B,CACF,CAEA,OAAShB,SAAS,CAAEiB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}