{"ast":null,"code":"const user = Math.floor(Math.random() * 2) === 1 ? 'user7' : 'user2';\nconst BASE_URL = `https://braeden-meikle-site-backend.onrender.com`; //`${process.env.REACT_APP_SERVER_BASE_URL}${service}?user=${user}`\n\nconst body = {\n  method: 'GET',\n  headers: {\n    'Content-Type': 'application/json',\n    'Cache-Control': 'no-cache'\n  }\n};\nlet oldBytesRead, newBytesRead;\n\n/*****     Public APIs     *****/\n\n/*   Get list of byte read/unread status  */\nfunction getUnread(setData, setLoading, now) {\n  const service = '/getUnread';\n  fetch(`${BASE_URL}${service}?user=${user}`, body).then(res => res.json()).then(d => {\n    oldBytesRead = d.unreadList;\n    newBytesRead = d.unreadList;\n    /* We want the screen to animate for minimum 2 seconds */\n    if (Date.now() < now + 2000) {\n      setTimeout(() => {\n        setData(d);\n        setLoading(false);\n      }, 2000 - (Date.now() - now));\n    } else {\n      setData(d);\n      setLoading(false);\n    }\n  });\n}\n\n/*   Mark a byte newly read  */\nfunction markRead(index) {\n  newBytesRead[index] = 0;\n  console.log(newBytesRead);\n}\n\n/*****                     *****/\n\n/*  Before the user leaves, dump and mark all bytes read   */\nwindow.addEventListener('beforeunload', _ => {\n  console.log(newBytesRead);\n  const service = '/read';\n  fetch(`${BASE_URL}${service}?read=${user}`, body);\n});\nexport { getUnread, markRead };","map":{"version":3,"names":["user","Math","floor","random","BASE_URL","body","method","headers","oldBytesRead","newBytesRead","getUnread","setData","setLoading","now","service","fetch","then","res","json","d","unreadList","Date","setTimeout","markRead","index","console","log","window","addEventListener","_"],"sources":["/Users/braedenmeikle/Documents/repo/braeden-meikle-site/client/src/api.js"],"sourcesContent":["\nconst user = Math.floor(Math.random()*2) === 1 ? 'user7' : 'user2'\nconst BASE_URL =  `https://braeden-meikle-site-backend.onrender.com` //`${process.env.REACT_APP_SERVER_BASE_URL}${service}?user=${user}`\n\nconst body = {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Cache-Control': 'no-cache'\n    } \n}\n\nlet oldBytesRead, newBytesRead\n\n/*****     Public APIs     *****/\n\n/*   Get list of byte read/unread status  */\nfunction getUnread(setData, setLoading, now) {\n  const service = '/getUnread'\n  fetch(`${BASE_URL}${service}?user=${user}`, body).then(res => res.json()).then(d => { \n    oldBytesRead = d.unreadList\n    newBytesRead = d.unreadList\n    /* We want the screen to animate for minimum 2 seconds */\n    if (Date.now() < now + 2000) {\n      setTimeout(() => {\n        setData(d)\n        setLoading(false)\n      }, 2000 - (Date.now() - now))\n    } else {\n      setData(d)\n      setLoading(false)\n    }\n  })\n}\n\n/*   Mark a byte newly read  */\nfunction markRead(index) {\n  newBytesRead[index] = 0\n  console.log(newBytesRead)\n}\n\n/*****                     *****/\n\n/*  Before the user leaves, dump and mark all bytes read   */\nwindow.addEventListener('beforeunload', _ => {\n  console.log(newBytesRead)\n  const service = '/read'\n  fetch(`${BASE_URL}${service}?read=${user}`, body)\n})\n\n\n\n\n\nexport { getUnread, markRead }"],"mappings":"AACA,MAAMA,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAC,CAAC,CAAC,KAAK,CAAC,GAAG,OAAO,GAAG,OAAO;AAClE,MAAMC,QAAQ,GAAI,kDAAkD,EAAC;;AAErE,MAAMC,IAAI,GAAG;EACTC,MAAM,EAAE,KAAK;EACbC,OAAO,EAAE;IACP,cAAc,EAAE,kBAAkB;IAClC,eAAe,EAAE;EACnB;AACJ,CAAC;AAED,IAAIC,YAAY,EAAEC,YAAY;;AAE9B;;AAEA;AACA,SAASC,SAASA,CAACC,OAAO,EAAEC,UAAU,EAAEC,GAAG,EAAE;EAC3C,MAAMC,OAAO,GAAG,YAAY;EAC5BC,KAAK,CAAC,GAAGX,QAAQ,GAAGU,OAAO,SAASd,IAAI,EAAE,EAAEK,IAAI,CAAC,CAACW,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CAACF,IAAI,CAACG,CAAC,IAAI;IAClFX,YAAY,GAAGW,CAAC,CAACC,UAAU;IAC3BX,YAAY,GAAGU,CAAC,CAACC,UAAU;IAC3B;IACA,IAAIC,IAAI,CAACR,GAAG,CAAC,CAAC,GAAGA,GAAG,GAAG,IAAI,EAAE;MAC3BS,UAAU,CAAC,MAAM;QACfX,OAAO,CAACQ,CAAC,CAAC;QACVP,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,EAAE,IAAI,IAAIS,IAAI,CAACR,GAAG,CAAC,CAAC,GAAGA,GAAG,CAAC,CAAC;IAC/B,CAAC,MAAM;MACLF,OAAO,CAACQ,CAAC,CAAC;MACVP,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,CAAC;AACJ;;AAEA;AACA,SAASW,QAAQA,CAACC,KAAK,EAAE;EACvBf,YAAY,CAACe,KAAK,CAAC,GAAG,CAAC;EACvBC,OAAO,CAACC,GAAG,CAACjB,YAAY,CAAC;AAC3B;;AAEA;;AAEA;AACAkB,MAAM,CAACC,gBAAgB,CAAC,cAAc,EAAEC,CAAC,IAAI;EAC3CJ,OAAO,CAACC,GAAG,CAACjB,YAAY,CAAC;EACzB,MAAMK,OAAO,GAAG,OAAO;EACvBC,KAAK,CAAC,GAAGX,QAAQ,GAAGU,OAAO,SAASd,IAAI,EAAE,EAAEK,IAAI,CAAC;AACnD,CAAC,CAAC;AAMF,SAASK,SAAS,EAAEa,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}