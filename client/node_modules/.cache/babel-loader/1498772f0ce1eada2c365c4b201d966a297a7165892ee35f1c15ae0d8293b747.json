{"ast":null,"code":"const user=Math.floor(Math.random()*2)===1?'user7':'user2';const BASE_URL=`https://braeden-meikle-site-backend.onrender.com`;//`${process.env.REACT_APP_SERVER_BASE_URL}${service}?user=${user}`\nconst body={method:'GET',headers:{'Content-Type':'application/json','Cache-Control':'no-cache'}};function getUnread(setData,setLoading,now){const service='/getUnread';fetch(`${BASE_URL}${service}?user=${user}`,body).then(res=>res.json()).then(d=>{/* We want the screen to animate for minimum 2 seconds */if(Date.now()<now+2000){setTimeout(()=>{setData(d);setLoading(false);},2000-(Date.now()-now));}else{setData(d);setLoading(false);}});}// function read(setData, setLoading) {\n//   const service = '/read'\n//   fetch(`${BASE_URL}${service}?user=${user}`, body).then(res => res.json()).then(d => { \n//     setData(d)\n//     setLoading(false)\n//   })\n// }\nasync function markRead(index){const baseURL=`${BASE_URL}/read`;const user='user2';const url=`${baseURL}?user=${user}?read=${index}`;const body={method:'POST',headers:{'Content-Type':'text/json'}};console.log('constructed req');try{const response=await fetch(url,body);if(!response.ok){throw new Error(`Response status: ${response.status}`);}console.log('res received');console.log(response.json);return response;}catch(error){console.log(error.message);}}export{getUnread,markRead};","map":{"version":3,"names":["user","Math","floor","random","BASE_URL","body","method","headers","getUnread","setData","setLoading","now","service","fetch","then","res","json","d","Date","setTimeout","markRead","index","baseURL","url","console","log","response","ok","Error","status","error","message"],"sources":["/Users/braedenmeikle/Documents/repo/braeden-meikle-site/client/src/api.js"],"sourcesContent":["\nconst user = Math.floor(Math.random()*2) === 1 ? 'user7' : 'user2'\nconst BASE_URL =  `https://braeden-meikle-site-backend.onrender.com` //`${process.env.REACT_APP_SERVER_BASE_URL}${service}?user=${user}`\n\nconst body = {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Cache-Control': 'no-cache'\n    } \n}\n\nfunction getUnread(setData, setLoading, now) {\n  const service = '/getUnread'\n  fetch(`${BASE_URL}${service}?user=${user}`, body).then(res => res.json()).then(d => { \n    /* We want the screen to animate for minimum 2 seconds */\n    if (Date.now() < now + 2000) {\n      setTimeout(() => {\n        setData(d)\n        setLoading(false)\n      }, 2000 - (Date.now() - now))\n    } else {\n      setData(d)\n      setLoading(false)\n    }\n  })\n}\n\n// function read(setData, setLoading) {\n//   const service = '/read'\n//   fetch(`${BASE_URL}${service}?user=${user}`, body).then(res => res.json()).then(d => { \n//     setData(d)\n//     setLoading(false)\n//   })\n// }\n\n\n\n\n\n\n\n\nasync function markRead(index) {\n  const baseURL = `${BASE_URL}/read`\n  const user = 'user2'\n  const url = `${baseURL}?user=${user}?read=${index}`\n\n  const body = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'text/json'\n      } \n  }\n\n  console.log('constructed req')\n\n  try {\n    const response = await fetch(url, body)\n    if (!response.ok) {\n      throw new Error(`Response status: ${response.status}`)\n    }\n    console.log('res received')\n    console.log(response.json)\n    return response\n  } catch (error) {\n    console.log(error.message)\n  }\n}\n\nexport { getUnread, markRead }"],"mappings":"AACA,KAAM,CAAAA,IAAI,CAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,GAAK,CAAC,CAAG,OAAO,CAAG,OAAO,CAClE,KAAM,CAAAC,QAAQ,CAAI,kDAAkD,CAAC;AAErE,KAAM,CAAAC,IAAI,CAAG,CACTC,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACP,cAAc,CAAE,kBAAkB,CAClC,eAAe,CAAE,UACnB,CACJ,CAAC,CAED,QAAS,CAAAC,SAASA,CAACC,OAAO,CAAEC,UAAU,CAAEC,GAAG,CAAE,CAC3C,KAAM,CAAAC,OAAO,CAAG,YAAY,CAC5BC,KAAK,CAAC,GAAGT,QAAQ,GAAGQ,OAAO,SAASZ,IAAI,EAAE,CAAEK,IAAI,CAAC,CAACS,IAAI,CAACC,GAAG,EAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CAACF,IAAI,CAACG,CAAC,EAAI,CAClF,yDACA,GAAIC,IAAI,CAACP,GAAG,CAAC,CAAC,CAAGA,GAAG,CAAG,IAAI,CAAE,CAC3BQ,UAAU,CAAC,IAAM,CACfV,OAAO,CAACQ,CAAC,CAAC,CACVP,UAAU,CAAC,KAAK,CAAC,CACnB,CAAC,CAAE,IAAI,EAAIQ,IAAI,CAACP,GAAG,CAAC,CAAC,CAAGA,GAAG,CAAC,CAAC,CAC/B,CAAC,IAAM,CACLF,OAAO,CAACQ,CAAC,CAAC,CACVP,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAAC,CACJ,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AASA,cAAe,CAAAU,QAAQA,CAACC,KAAK,CAAE,CAC7B,KAAM,CAAAC,OAAO,CAAG,GAAGlB,QAAQ,OAAO,CAClC,KAAM,CAAAJ,IAAI,CAAG,OAAO,CACpB,KAAM,CAAAuB,GAAG,CAAG,GAAGD,OAAO,SAAStB,IAAI,SAASqB,KAAK,EAAE,CAEnD,KAAM,CAAAhB,IAAI,CAAG,CACTC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,WAClB,CACJ,CAAC,CAEDiB,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC,CAE9B,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAb,KAAK,CAACU,GAAG,CAAElB,IAAI,CAAC,CACvC,GAAI,CAACqB,QAAQ,CAACC,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,oBAAoBF,QAAQ,CAACG,MAAM,EAAE,CAAC,CACxD,CACAL,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC,CAC3BD,OAAO,CAACC,GAAG,CAACC,QAAQ,CAACV,IAAI,CAAC,CAC1B,MAAO,CAAAU,QAAQ,CACjB,CAAE,MAAOI,KAAK,CAAE,CACdN,OAAO,CAACC,GAAG,CAACK,KAAK,CAACC,OAAO,CAAC,CAC5B,CACF,CAEA,OAASvB,SAAS,CAAEY,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}