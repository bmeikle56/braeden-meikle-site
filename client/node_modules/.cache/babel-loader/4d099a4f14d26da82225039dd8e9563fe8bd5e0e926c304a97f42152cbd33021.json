{"ast":null,"code":"import'../styles/global.css';import React,{useState,useEffect}from'react';import{pages}from'../data/consts.js';import{Fun}from'./Fun.js';import{AnimatedSidebar}from'./Sidebar.js';import{Footer}from'./Footer.js';import{Portfolio}from'./Portfolio.js';import{Articles}from'./Articles.js';import{VDivider}from'./Vdiv.js';import{getUnread}from'../api.js';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Body(){/* Data fetched from backend that will be passed to component before render */const[data,setData]=useState(null);/* We init our app to loading state */const[isLoading,setLoading]=useState(true);useEffect(()=>{const user=Math.floor(Math.random()*2)===1?'user7':'user2';const service='/getUnread';const url=`${process.env.REACT_APP_SERVER_BASE_URL}${service}?user=${user}`;const body={method:'GET',headers:{'Content-Type':'application/json','Cache-Control':'no-cache'}};fetch(url,body).then(res=>res.json()).then(d=>{setData(d);console.log(d);setLoading(false);});},[]);if(isLoading){return/*#__PURE__*/_jsx(\"div\",{style:{color:'white'},children:\"...Loading\"});}return/*#__PURE__*/_jsxs(\"body\",{children:[/*#__PURE__*/_jsx(AnimatedSidebar,{pages:pages}),/*#__PURE__*/_jsx(\"div\",{id:\"fun\",children:/*#__PURE__*/_jsx(Fun,{})}),/*#__PURE__*/_jsx(VDivider,{}),/*#__PURE__*/_jsx(\"div\",{id:\"portfolio\",children:/*#__PURE__*/_jsx(Portfolio,{})}),/*#__PURE__*/_jsx(VDivider,{}),/*#__PURE__*/_jsx(\"div\",{id:\"articles\",children:/*#__PURE__*/_jsx(Articles,{unreadList:data.unreadList})}),/*#__PURE__*/_jsx(VDivider,{}),/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',justifyContent:'center'},children:/*#__PURE__*/_jsx(Footer,{})})]});}export default function App(){return/*#__PURE__*/_jsx(Body,{});}","map":{"version":3,"names":["React","useState","useEffect","pages","Fun","AnimatedSidebar","Footer","Portfolio","Articles","VDivider","getUnread","jsx","_jsx","jsxs","_jsxs","Body","data","setData","isLoading","setLoading","user","Math","floor","random","service","url","process","env","REACT_APP_SERVER_BASE_URL","body","method","headers","fetch","then","res","json","d","console","log","style","color","children","id","unreadList","display","justifyContent","App"],"sources":["/Users/braedenmeikle/Documents/repo/braeden-meikle-site/client/src/components/App.js"],"sourcesContent":["\nimport '../styles/global.css'\nimport React, { useState, useEffect } from 'react'\nimport { \n  pages,\n} from '../data/consts.js'\nimport { Fun } from './Fun.js'\nimport { AnimatedSidebar } from './Sidebar.js'\nimport { Footer } from './Footer.js'\nimport { Portfolio } from './Portfolio.js'\nimport { Articles } from './Articles.js'\nimport { VDivider } from './Vdiv.js'\nimport { getUnread } from '../api.js' \n\nfunction Body() {\n  /* Data fetched from backend that will be passed to component before render */\n  const [data, setData] = useState(null)\n\n  /* We init our app to loading state */\n  const [isLoading, setLoading] = useState(true)\n\n  useEffect(() => {\n    const user = Math.floor(Math.random()*2) === 1 ? 'user7' : 'user2'\n    const service = '/getUnread'\n    const url =  `${process.env.REACT_APP_SERVER_BASE_URL}${service}?user=${user}`\n\n    const body = {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Cache-Control': 'no-cache'\n        } \n    }\n\n    fetch(url, body).then(res => res.json()).then(d => { \n      setData(d)\n      console.log(d)\n      setLoading(false)\n    })\n  }, [])\n\n  if (isLoading) {\n    return <div style={{color: 'white'}}>...Loading</div>\n  }\n\n  return (\n    <body>\n      <AnimatedSidebar pages={pages}/>\n      <div id='fun'>\n        <Fun/>\n      </div>\n      <VDivider/>\n      <div id='portfolio'>\n        <Portfolio/>\n      </div>\n      <VDivider/>\n      <div id='articles'>\n        <Articles unreadList={data.unreadList}/>\n      </div>\n      <VDivider/>\n      <div style={{display:'flex', justifyContent:'center'}}>\n        <Footer/>\n      </div>\n    </body>\n  )\n}\n\nexport default function App() {\n  return <Body/>\n}"],"mappings":"AACA,MAAO,sBAAsB,CAC7B,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OACEC,KAAK,KACA,mBAAmB,CAC1B,OAASC,GAAG,KAAQ,UAAU,CAC9B,OAASC,eAAe,KAAQ,cAAc,CAC9C,OAASC,MAAM,KAAQ,aAAa,CACpC,OAASC,SAAS,KAAQ,gBAAgB,CAC1C,OAASC,QAAQ,KAAQ,eAAe,CACxC,OAASC,QAAQ,KAAQ,WAAW,CACpC,OAASC,SAAS,KAAQ,WAAW,QAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAErC,QAAS,CAAAC,IAAIA,CAAA,CAAG,CACd,8EACA,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGhB,QAAQ,CAAC,IAAI,CAAC,CAEtC,sCACA,KAAM,CAACiB,SAAS,CAAEC,UAAU,CAAC,CAAGlB,QAAQ,CAAC,IAAI,CAAC,CAE9CC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAkB,IAAI,CAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,GAAK,CAAC,CAAG,OAAO,CAAG,OAAO,CAClE,KAAM,CAAAC,OAAO,CAAG,YAAY,CAC5B,KAAM,CAAAC,GAAG,CAAI,GAAGC,OAAO,CAACC,GAAG,CAACC,yBAAyB,GAAGJ,OAAO,SAASJ,IAAI,EAAE,CAE9E,KAAM,CAAAS,IAAI,CAAG,CACTC,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACP,cAAc,CAAE,kBAAkB,CAClC,eAAe,CAAE,UACnB,CACJ,CAAC,CAEDC,KAAK,CAACP,GAAG,CAAEI,IAAI,CAAC,CAACI,IAAI,CAACC,GAAG,EAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CAACF,IAAI,CAACG,CAAC,EAAI,CACjDnB,OAAO,CAACmB,CAAC,CAAC,CACVC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC,CACdjB,UAAU,CAAC,KAAK,CAAC,CACnB,CAAC,CAAC,CACJ,CAAC,CAAE,EAAE,CAAC,CAEN,GAAID,SAAS,CAAE,CACb,mBAAON,IAAA,QAAK2B,KAAK,CAAE,CAACC,KAAK,CAAE,OAAO,CAAE,CAAAC,QAAA,CAAC,YAAU,CAAK,CAAC,CACvD,CAEA,mBACE3B,KAAA,SAAA2B,QAAA,eACE7B,IAAA,CAACP,eAAe,EAACF,KAAK,CAAEA,KAAM,CAAC,CAAC,cAChCS,IAAA,QAAK8B,EAAE,CAAC,KAAK,CAAAD,QAAA,cACX7B,IAAA,CAACR,GAAG,GAAC,CAAC,CACH,CAAC,cACNQ,IAAA,CAACH,QAAQ,GAAC,CAAC,cACXG,IAAA,QAAK8B,EAAE,CAAC,WAAW,CAAAD,QAAA,cACjB7B,IAAA,CAACL,SAAS,GAAC,CAAC,CACT,CAAC,cACNK,IAAA,CAACH,QAAQ,GAAC,CAAC,cACXG,IAAA,QAAK8B,EAAE,CAAC,UAAU,CAAAD,QAAA,cAChB7B,IAAA,CAACJ,QAAQ,EAACmC,UAAU,CAAE3B,IAAI,CAAC2B,UAAW,CAAC,CAAC,CACrC,CAAC,cACN/B,IAAA,CAACH,QAAQ,GAAC,CAAC,cACXG,IAAA,QAAK2B,KAAK,CAAE,CAACK,OAAO,CAAC,MAAM,CAAEC,cAAc,CAAC,QAAQ,CAAE,CAAAJ,QAAA,cACpD7B,IAAA,CAACN,MAAM,GAAC,CAAC,CACN,CAAC,EACF,CAAC,CAEX,CAEA,cAAe,SAAS,CAAAwC,GAAGA,CAAA,CAAG,CAC5B,mBAAOlC,IAAA,CAACG,IAAI,GAAC,CAAC,CAChB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}