{"ast":null,"code":"const user = Math.floor(Math.random() * 2) === 1 ? 'user7' : 'user2';\nconst service = '/getUnread';\nconst BASE_URL = `https://braeden-meikle-site-backend.onrender.com`; //`${process.env.REACT_APP_SERVER_BASE_URL}${service}?user=${user}`\n\nconst body = {\n  method: 'GET',\n  headers: {\n    'Content-Type': 'application/json',\n    'Cache-Control': 'no-cache'\n  }\n};\nfunction getUnread(setData, setLoading) {\n  const service = '/getUnread';\n  fetch(url, body).then(res => res.json()).then(d => {\n    setData(d);\n    setLoading(false);\n  });\n}\nasync function markRead(index) {\n  const baseURL = `${BASE_URL}/read`;\n  const user = 'user2';\n  const url = `${baseURL}?user=${user}?read=${index}`;\n  const body = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'text/json'\n    }\n  };\n  console.log('constructed req');\n  try {\n    const response = await fetch(url, body);\n    if (!response.ok) {\n      throw new Error(`Response status: ${response.status}`);\n    }\n    console.log('res received');\n    console.log(response.json);\n    return response;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\nexport { getUnread, markRead };","map":{"version":3,"names":["user","Math","floor","random","service","BASE_URL","body","method","headers","getUnread","setData","setLoading","fetch","url","then","res","json","d","markRead","index","baseURL","console","log","response","ok","Error","status","error","message"],"sources":["/Users/braedenmeikle/Documents/repo/braeden-meikle-site/client/src/api.js"],"sourcesContent":["\nconst user = Math.floor(Math.random()*2) === 1 ? 'user7' : 'user2'\nconst service = '/getUnread'\nconst BASE_URL =  `https://braeden-meikle-site-backend.onrender.com` //`${process.env.REACT_APP_SERVER_BASE_URL}${service}?user=${user}`\n\nconst body = {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Cache-Control': 'no-cache'\n    } \n}\n\nfunction getUnread(setData, setLoading) {\n  const service = '/getUnread'\n  fetch(url, body).then(res => res.json()).then(d => { \n    setData(d)\n    setLoading(false)\n  })\n}\n\n\n\n\n\n\n\n\nasync function markRead(index) {\n  const baseURL = `${BASE_URL}/read`\n  const user = 'user2'\n  const url = `${baseURL}?user=${user}?read=${index}`\n\n  const body = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'text/json'\n      } \n  }\n\n  console.log('constructed req')\n\n  try {\n    const response = await fetch(url, body)\n    if (!response.ok) {\n      throw new Error(`Response status: ${response.status}`)\n    }\n    console.log('res received')\n    console.log(response.json)\n    return response\n  } catch (error) {\n    console.log(error.message)\n  }\n}\n\nexport { getUnread, markRead }"],"mappings":"AACA,MAAMA,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAC,CAAC,CAAC,KAAK,CAAC,GAAG,OAAO,GAAG,OAAO;AAClE,MAAMC,OAAO,GAAG,YAAY;AAC5B,MAAMC,QAAQ,GAAI,kDAAkD,EAAC;;AAErE,MAAMC,IAAI,GAAG;EACTC,MAAM,EAAE,KAAK;EACbC,OAAO,EAAE;IACP,cAAc,EAAE,kBAAkB;IAClC,eAAe,EAAE;EACnB;AACJ,CAAC;AAED,SAASC,SAASA,CAACC,OAAO,EAAEC,UAAU,EAAE;EACtC,MAAMP,OAAO,GAAG,YAAY;EAC5BQ,KAAK,CAACC,GAAG,EAAEP,IAAI,CAAC,CAACQ,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CAACF,IAAI,CAACG,CAAC,IAAI;IACjDP,OAAO,CAACO,CAAC,CAAC;IACVN,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,CAAC;AACJ;AASA,eAAeO,QAAQA,CAACC,KAAK,EAAE;EAC7B,MAAMC,OAAO,GAAG,GAAGf,QAAQ,OAAO;EAClC,MAAML,IAAI,GAAG,OAAO;EACpB,MAAMa,GAAG,GAAG,GAAGO,OAAO,SAASpB,IAAI,SAASmB,KAAK,EAAE;EAEnD,MAAMb,IAAI,GAAG;IACTC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACJ,CAAC;EAEDa,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;EAE9B,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACC,GAAG,EAAEP,IAAI,CAAC;IACvC,IAAI,CAACiB,QAAQ,CAACC,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,oBAAoBF,QAAQ,CAACG,MAAM,EAAE,CAAC;IACxD;IACAL,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;IAC3BD,OAAO,CAACC,GAAG,CAACC,QAAQ,CAACP,IAAI,CAAC;IAC1B,OAAOO,QAAQ;EACjB,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdN,OAAO,CAACC,GAAG,CAACK,KAAK,CAACC,OAAO,CAAC;EAC5B;AACF;AAEA,SAASnB,SAAS,EAAES,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}