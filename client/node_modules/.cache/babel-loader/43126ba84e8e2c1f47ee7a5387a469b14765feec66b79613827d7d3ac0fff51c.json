{"ast":null,"code":"var _jsxFileName = \"/Users/braedenmeikle/Documents/repo/braeden-meikle-site/src/components/Articles.js\";\nimport { markRead } from '../api.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst articles = [{\n  title: 'Swift is the best programming language',\n  content: SwiftArticle\n}, {\n  title: 'Crashing the program is better than defaults',\n  content: NilArticle\n}, {\n  title: `How I'd describe programming`,\n  content: NilArticle\n}];\nfunction ProgrammingArticle() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n/* Colored code component */\n_c = ProgrammingArticle;\nfunction Ccode({\n  code,\n  color\n}) {\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    style: {\n      fontFamily: 'andale mono, monospace',\n      color: color\n    },\n    children: code\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 42\n  }, this);\n}\n\n/* Big break component */\n_c2 = Ccode;\nfunction BBr() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 30\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 25\n  }, this);\n}\n_c3 = BBr;\nfunction SwiftArticle() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        lineHeight: 1.3,\n        textWrap: 'wrap',\n        color: 'white'\n      },\n      children: [\"Features I like:\", /*#__PURE__*/_jsxDEV(BBr, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), \"1) default function via protocol declaration + extension Let's suppose several unrelated classes need access to a function. In Swift, we can declare a protocol with one function, extend the protocol and implement the function (following Interface Segregation Principle), and have those classes implement the protocol, gaining access to the function. While Swift allows functions to be placed in the file outside of a struct/class/protocol, the benefit of this approach is that the function is only available to implementing classes (only the ones that need it) and it's explicitly clear where this function is coming from.\", /*#__PURE__*/_jsxDEV(BBr, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), \"2) special early exit syntax\", /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: '6px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Ccode, {\n          code: 'guard',\n          color: 'rgb(255,0,123)'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Ccode, {\n          code: 'let',\n          color: 'rgb(255,0,123)'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Ccode, {\n          code: 'firstName',\n          color: 'rgb(255,255,255)'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Ccode, {\n          code: '=',\n          color: 'rgb(255,255,255)'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Ccode, {\n            code: 'fetchOnlineUsers',\n            color: 'rgb(0,240,0)'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Ccode, {\n            code: '()?.',\n            color: 'rgb(255,255,255)'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Ccode, {\n            code: 'name',\n            color: 'rgb(0,240,0)'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Ccode, {\n          code: 'else',\n          color: 'rgb(255,0,123)'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Ccode, {\n          code: '{',\n          color: 'rgb(255,255,255)'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Ccode, {\n          code: 'return',\n          color: 'rgb(255,0,123)'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Ccode, {\n          code: '}',\n          color: 'rgb(255,255,255)'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), \"3) elegant optional handling\", /*#__PURE__*/_jsxDEV(BBr, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), \"4) multi-paradigm nature\", /*#__PURE__*/_jsxDEV(BBr, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), \"Although many languages are adopting multi-paradigm forms as they evolve, Swift takes\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_c4 = SwiftArticle;\nfunction NilArticle() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        lineHeight: 1.3,\n        textWrap: 'wrap',\n        color: 'white'\n      },\n      children: [\"Force unwrapping an optional is better than null coalescing where the latter is app-breaking. Some shallow online digging may lead you to\\xA0\", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://forums.swift.org/t/moving-toward-deprecating-force-unwrap-from-swift/43455\",\n        target: \"_blank\",\n        className: \"article\",\n        rel: \"noreferrer\",\n        children: \"articles suggesting the deprecation of the operator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), \". It becomes almost subconscious to utilize null coalescing operators in languages with optionals (Swift, Kotlin, Dart, C#, Rust, etc) where you need to bridge an optional to a non-optional field. While satisfying the compiler, if these default values were used in production, the user experience may be completely compromised.\", /*#__PURE__*/_jsxDEV(BBr, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), \"A common argument against force unwrapping is that it's riskier (it is) and therefore we can prevent crashes in a highly-scaled application where edge-cases are more likely to occur.\", /*#__PURE__*/_jsxDEV(BBr, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), \"If something went wrong and the default value is used, an element may be out of view. I refer to this scenario as a 'soft crash'.\", /*#__PURE__*/_jsxDEV(BBr, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), \"In these cases, isn't it more effective to crash the program? While violent, a forced crash avoiding a corrupted application state is better for both the application and user. Really, it's a lesser of two evils choice. In a corrupted application state, users may be able to access information they should not have access to or reach a more corrupted state.\", /*#__PURE__*/_jsxDEV(BBr, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), \"Crashing is easier to catch in development, and if it reaches production, easier to patch as long as the application is deployed with a crash-logging service (i.e. Firebase).\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_c5 = NilArticle;\nfunction Articles() {\n  const contentMaxHeight = '500px';\n  function displayContent(index) {\n    // toggle chevron animation\n    const chevrons = document.getElementsByClassName('chevron');\n    chevrons[index].classList.toggle('rotate');\n\n    // drop down content (animated)\n    const panels = document.getElementsByClassName('panel');\n    panels[index].style.maxHeight = panels[index].style.maxHeight === contentMaxHeight ? '0px' : contentMaxHeight;\n    panels[index].classList.toggle('drop');\n\n    // hide new badge once article is clicked for the first time\n    const newBadges = document.getElementsByClassName('new-badge');\n    newBadges[index].classList.toggle('fade');\n    newBadges[index].style.opacity = 0;\n    console.log('before');\n    markRead(index);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      gap: '10px',\n      paddingTop: '80px',\n      display: 'grid',\n      justifyContent: 'center'\n    },\n    children: articles.map((article, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"drop-down\",\n        onClick: () => displayContent(index),\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'gray'\n          },\n          children: article.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginLeft: 'auto',\n            display: 'flex',\n            gap: '12px',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"new-badge\",\n            style: {\n              color: 'rgb(0,255,0)',\n              fontSize: '10px'\n            },\n            children: \"New\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"chevron\",\n            style: {\n              margin: '-2px 0 0 0'\n            },\n            children: \"\\u203A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"panel\",\n        children: /*#__PURE__*/_jsxDEV(article.content, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 41\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n}\n_c6 = Articles;\nexport { Articles };\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"ProgrammingArticle\");\n$RefreshReg$(_c2, \"Ccode\");\n$RefreshReg$(_c3, \"BBr\");\n$RefreshReg$(_c4, \"SwiftArticle\");\n$RefreshReg$(_c5, \"NilArticle\");\n$RefreshReg$(_c6, \"Articles\");","map":{"version":3,"names":["markRead","jsxDEV","_jsxDEV","articles","title","content","SwiftArticle","NilArticle","ProgrammingArticle","fileName","_jsxFileName","lineNumber","columnNumber","_c","Ccode","code","color","style","fontFamily","children","_c2","BBr","_c3","lineHeight","textWrap","display","gap","_c4","href","target","className","rel","_c5","Articles","contentMaxHeight","displayContent","index","chevrons","document","getElementsByClassName","classList","toggle","panels","maxHeight","newBadges","opacity","console","log","paddingTop","justifyContent","map","article","onClick","marginLeft","alignItems","fontSize","margin","class","_c6","$RefreshReg$"],"sources":["/Users/braedenmeikle/Documents/repo/braeden-meikle-site/src/components/Articles.js"],"sourcesContent":["\nimport { markRead } from '../api.js'\n\nconst articles = [\n  {\n    title: 'Swift is the best programming language',\n    content: SwiftArticle\n  },\n  {\n    title: 'Crashing the program is better than defaults',\n    content: NilArticle\n  },\n  {\n    title: `How I'd describe programming`,\n    content: NilArticle\n  }\n]\n\nfunction ProgrammingArticle() {\n  return (\n    <div>\n      \n    </div>\n  )\n}\n\n/* Colored code component */ \nfunction Ccode({ code, color }) { return <p style={{fontFamily: 'andale mono, monospace', color:color}}>{code}</p> }\n\n/* Big break component */\nfunction BBr() { return <div><br></br></div> }\n\nfunction SwiftArticle() {\n  return (\n    <div>\n      <p style={{lineHeight: 1.3, textWrap: 'wrap', color: 'white'}}>\n        Features I like:\n        <BBr/>\n        1) default function via protocol declaration + extension\n        Let's suppose several unrelated classes need access to a function. In Swift, we can \n        declare a protocol with one function, extend the protocol and implement the function\n        (following Interface Segregation Principle), and have those classes implement the \n        protocol, gaining access to the function. While Swift allows functions to be placed in\n        the file outside of a struct/class/protocol, the benefit of this approach is that the \n        function is only available to implementing classes (only the ones that need it) and it's\n        explicitly clear where this function is coming from.\n        <BBr/>\n        2) special early exit syntax\n        <div style={{display: 'flex', gap: '6px'}}>\n          <Ccode code={'guard'} color={'rgb(255,0,123)'}/>\n          <Ccode code={'let'} color={'rgb(255,0,123)'}/>\n          <Ccode code={'firstName'} color={'rgb(255,255,255)'}/>\n          <Ccode code={'='} color={'rgb(255,255,255)'}/>\n          <div style={{display: 'flex'}}>\n            <Ccode code={'fetchOnlineUsers'} color={'rgb(0,240,0)'}/>\n            <Ccode code={'()?.'} color={'rgb(255,255,255)'}/>\n            <Ccode code={'name'} color={'rgb(0,240,0)'}/>\n          </div>\n          <Ccode code={'else'} color={'rgb(255,0,123)'}/>\n          <Ccode code={'{'} color={'rgb(255,255,255)'}/>\n          <Ccode code={'return'} color={'rgb(255,0,123)'}/>\n          <Ccode code={'}'} color={'rgb(255,255,255)'}/>\n        </div>\n        3) elegant optional handling\n        <BBr/>\n        4) multi-paradigm nature\n        <BBr/>\n        Although many languages are adopting multi-paradigm forms as they evolve, Swift takes\n      </p>\n    </div>\n  )\n}\n\nfunction NilArticle() {\n  return (\n    <div>\n      <p style={{lineHeight: 1.3, textWrap: 'wrap', color: 'white'}}>\n        Force unwrapping an optional is better than null coalescing where the latter is app-breaking. \n        Some shallow online digging may lead you to&nbsp;\n        <a href='https://forums.swift.org/t/moving-toward-deprecating-force-unwrap-from-swift/43455' \n        target='_blank' className='article' rel='noreferrer'>\n          articles suggesting the deprecation of the operator\n        </a>\n        . It becomes almost subconscious to utilize null coalescing operators in languages with optionals\n        (Swift, Kotlin, Dart, C#, Rust, etc) where you need to bridge an optional to a non-optional field.\n        While satisfying the compiler, if these default values were used in production, the user experience\n        may be completely compromised. \n        <BBr/>\n        A common argument against force unwrapping is that it's riskier (it is) and therefore we can\n        prevent crashes in a highly-scaled application where edge-cases are more likely to occur. \n        <BBr/>\n        If something went wrong and the default value is used, an element may be out of view. I refer \n        to this scenario as a 'soft crash'.\n        <BBr/>\n        In these cases, isn't it more effective to crash the program? While violent, a forced crash \n        avoiding a corrupted application state is better for both the application and user. Really, it's\n        a lesser of two evils choice. In a corrupted application state, users may be able to access \n        information they should not have access to or reach a more corrupted state.\n        <BBr/>\n        Crashing is easier to catch in development, and if it reaches production, easier to patch\n        as long as the application is deployed with a crash-logging service (i.e. Firebase).\n      </p>\n    </div>\n  )\n}\n\nfunction Articles() {\n  \n  const contentMaxHeight = '500px'\n\n  function displayContent(index) {\n    // toggle chevron animation\n    const chevrons = document.getElementsByClassName('chevron')\n    chevrons[index].classList.toggle('rotate')\n\n    // drop down content (animated)\n    const panels = document.getElementsByClassName('panel')\n    panels[index].style.maxHeight = panels[index].style.maxHeight === contentMaxHeight ? '0px' : contentMaxHeight\n    panels[index].classList.toggle('drop')\n\n    // hide new badge once article is clicked for the first time\n    const newBadges = document.getElementsByClassName('new-badge')\n    newBadges[index].classList.toggle('fade')\n    newBadges[index].style.opacity = 0\n    console.log('before')\n    markRead(index)\n  }\n\n  return (\n    <div style={{gap: '10px', paddingTop: '80px', display: 'grid', justifyContent: 'center'}}>\n      {articles.map((article, index) => <div>\n        <button className='drop-down' onClick={() => displayContent(index)}>\n          <p style={{color: 'gray'}}>{article.title}</p>\n          <div style={{marginLeft: 'auto', display: 'flex', gap: '12px', alignItems: 'center'}}>\n            <p className='new-badge' style={{color: 'rgb(0,255,0)', fontSize:'10px'}}>New</p>\n            <span className='chevron' style={{margin:'-2px 0 0 0'}}>&rsaquo;</span>\n          </div>\n        </button>\n        <div class='panel'>\n          {<article.content/>}\n        </div>\n      </div>)}\n    </div>\n  )\n}\n\nexport { Articles }"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}