{"ast":null,"code":"import'../styles/global.css';import React,{useState,useEffect}from'react';import{funMeta,pages,portfolioMeta}from'../data/data.js';import{Fun}from'./Fun.js';import{AnimatedSidebar}from'./Sidebar.js';import{Bytes}from'./Bytes.js';import{Footer}from'./Footer.js';import{Loading}from'./Loading.js';import{Portfolio}from'./Portfolio.js';import{VDivider}from'./Vdiv.js';import{getUnread}from'../api.js';// turned off for now...\nimport{motion}from'motion/react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Body(){/*   Data fetched from backend that will be passed to component before render   */const[data,setData]=useState(null);/*   We init our app to loading state   */const[isLoading,setLoading]=useState(true);/*  (Fake) load data from server while providing an animation   */useEffect(()=>{getUnread(setData,setLoading,Date.now());},[]);if(isLoading){return/*#__PURE__*/_jsx(Loading,{});}return/*#__PURE__*/_jsx(\"body\",{children:/*#__PURE__*/_jsxs(motion.div,{initial:{opacity:0},animate:{opacity:1},transition:{delay:.25},children:[/*#__PURE__*/_jsx(AnimatedSidebar,{pages:pages}),/*#__PURE__*/_jsx(\"div\",{id:\"fun\",children:/*#__PURE__*/_jsx(Fun,{meta:funMeta})}),/*#__PURE__*/_jsx(VDivider,{}),/*#__PURE__*/_jsx(\"div\",{id:\"portfolio\",children:/*#__PURE__*/_jsx(Portfolio,{meta:portfolioMeta})}),/*#__PURE__*/_jsx(VDivider,{}),/*#__PURE__*/_jsx(\"div\",{id:\"bytes\",children:/*#__PURE__*/_jsx(Bytes,{unreadList:data.unreadList})}),/*#__PURE__*/_jsx(VDivider,{}),/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',justifyContent:'center'},children:/*#__PURE__*/_jsx(Footer,{})})]})});}export default function App(){return/*#__PURE__*/_jsx(Body,{});}","map":{"version":3,"names":["React","useState","useEffect","funMeta","pages","portfolioMeta","Fun","AnimatedSidebar","Bytes","Footer","Loading","Portfolio","VDivider","getUnread","motion","jsx","_jsx","jsxs","_jsxs","Body","data","setData","isLoading","setLoading","Date","now","children","div","initial","opacity","animate","transition","delay","id","meta","unreadList","style","display","justifyContent","App"],"sources":["/Users/braedenmeikle/Documents/repo/braeden-meikle-site/client/src/components/App.js"],"sourcesContent":["\nimport '../styles/global.css'\nimport React, { useState, useEffect } from 'react'\nimport { \n  funMeta,\n  pages,\n  portfolioMeta\n} from '../data/data.js'\nimport { Fun } from './Fun.js'\nimport { AnimatedSidebar } from './Sidebar.js'\nimport { Bytes } from './Bytes.js'\nimport { Footer } from './Footer.js'\nimport { Loading } from './Loading.js'\nimport { Portfolio } from './Portfolio.js'\nimport { VDivider } from './Vdiv.js'\nimport { getUnread } from '../api.js' // turned off for now...\nimport { motion } from 'motion/react'\n\nfunction Body() {\n  /*   Data fetched from backend that will be passed to component before render   */\n  const [data, setData] = useState(null)\n\n  /*   We init our app to loading state   */\n  const [isLoading, setLoading] = useState(true)\n\n  /*  (Fake) load data from server while providing an animation   */\n  useEffect(() => {\n    getUnread(setData, setLoading, Date.now())\n  }, [])\n\n  if (isLoading) {\n    return <Loading/>\n  }\n\n  return (\n    <body>\n      <motion.div\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      transition={{\n        delay: .25\n      }}\n      >\n        <AnimatedSidebar pages={pages}/>\n        <div id='fun'>\n          <Fun meta={funMeta}/>\n        </div>\n        <VDivider/>\n        <div id='portfolio'>\n          <Portfolio meta={portfolioMeta}/>\n        </div>\n        <VDivider/>\n        <div id='bytes'>\n          <Bytes unreadList={data.unreadList}/>\n        </div>\n        <VDivider/>\n        <div style={{display:'flex', justifyContent:'center'}}>\n          <Footer/>\n        </div>\n      </motion.div>\n    </body>\n  )\n}\n\nexport default function App() {\n  return <Body/>\n}"],"mappings":"AACA,MAAO,sBAAsB,CAC7B,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OACEC,OAAO,CACPC,KAAK,CACLC,aAAa,KACR,iBAAiB,CACxB,OAASC,GAAG,KAAQ,UAAU,CAC9B,OAASC,eAAe,KAAQ,cAAc,CAC9C,OAASC,KAAK,KAAQ,YAAY,CAClC,OAASC,MAAM,KAAQ,aAAa,CACpC,OAASC,OAAO,KAAQ,cAAc,CACtC,OAASC,SAAS,KAAQ,gBAAgB,CAC1C,OAASC,QAAQ,KAAQ,WAAW,CACpC,OAASC,SAAS,KAAQ,WAAW,CAAC;AACtC,OAASC,MAAM,KAAQ,cAAc,QAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAErC,QAAS,CAAAC,IAAIA,CAAA,CAAG,CACd,kFACA,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGpB,QAAQ,CAAC,IAAI,CAAC,CAEtC,0CACA,KAAM,CAACqB,SAAS,CAAEC,UAAU,CAAC,CAAGtB,QAAQ,CAAC,IAAI,CAAC,CAE9C,kEACAC,SAAS,CAAC,IAAM,CACdW,SAAS,CAACQ,OAAO,CAAEE,UAAU,CAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC,CAC5C,CAAC,CAAE,EAAE,CAAC,CAEN,GAAIH,SAAS,CAAE,CACb,mBAAON,IAAA,CAACN,OAAO,GAAC,CAAC,CACnB,CAEA,mBACEM,IAAA,SAAAU,QAAA,cACER,KAAA,CAACJ,MAAM,CAACa,GAAG,EACXC,OAAO,CAAE,CAAEC,OAAO,CAAE,CAAE,CAAE,CACxBC,OAAO,CAAE,CAAED,OAAO,CAAE,CAAE,CAAE,CACxBE,UAAU,CAAE,CACVC,KAAK,CAAE,GACT,CAAE,CAAAN,QAAA,eAEAV,IAAA,CAACT,eAAe,EAACH,KAAK,CAAEA,KAAM,CAAC,CAAC,cAChCY,IAAA,QAAKiB,EAAE,CAAC,KAAK,CAAAP,QAAA,cACXV,IAAA,CAACV,GAAG,EAAC4B,IAAI,CAAE/B,OAAQ,CAAC,CAAC,CAClB,CAAC,cACNa,IAAA,CAACJ,QAAQ,GAAC,CAAC,cACXI,IAAA,QAAKiB,EAAE,CAAC,WAAW,CAAAP,QAAA,cACjBV,IAAA,CAACL,SAAS,EAACuB,IAAI,CAAE7B,aAAc,CAAC,CAAC,CAC9B,CAAC,cACNW,IAAA,CAACJ,QAAQ,GAAC,CAAC,cACXI,IAAA,QAAKiB,EAAE,CAAC,OAAO,CAAAP,QAAA,cACbV,IAAA,CAACR,KAAK,EAAC2B,UAAU,CAAEf,IAAI,CAACe,UAAW,CAAC,CAAC,CAClC,CAAC,cACNnB,IAAA,CAACJ,QAAQ,GAAC,CAAC,cACXI,IAAA,QAAKoB,KAAK,CAAE,CAACC,OAAO,CAAC,MAAM,CAAEC,cAAc,CAAC,QAAQ,CAAE,CAAAZ,QAAA,cACpDV,IAAA,CAACP,MAAM,GAAC,CAAC,CACN,CAAC,EACI,CAAC,CACT,CAAC,CAEX,CAEA,cAAe,SAAS,CAAA8B,GAAGA,CAAA,CAAG,CAC5B,mBAAOvB,IAAA,CAACG,IAAI,GAAC,CAAC,CAChB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}