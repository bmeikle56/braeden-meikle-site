{"ast":null,"code":"var _jsxFileName = \"/Users/braedenmeikle/Documents/repo/braeden-meikle-site/src/sections/thoughts.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst articles = [{\n  title: 'Swift is the best programming language',\n  content: SwiftArticle\n}, {\n  title: 'Crashing the program is better than defaults',\n  content: NilArticle\n}];\nfunction SwiftArticle() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'white'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_c = SwiftArticle;\nfunction NilArticle() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'white'\n      },\n      children: \"Force unwrapping an optional is better than null coalescing where the latter is app-breaking. It becomes almost subconscious to utilize null coalescing operators in languages with optionals (Swift, Kotlin, Dart, C#, Rust, etc), but in most cases,\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_c2 = NilArticle;\nfunction Thoughts() {\n  const contentMaxHeight = '500px';\n  function displayContent(index) {\n    const panels = document.getElementsByClassName('panel');\n    const chevrons = document.getElementsByClassName('chevron');\n    chevrons[index].classList.toggle('rotate');\n    panels[index].style.maxHeight = panels[index].style.maxHeight === contentMaxHeight ? '0px' : contentMaxHeight;\n    panels[index].classList.toggle('drop');\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      gap: '10px',\n      paddingTop: '80px',\n      display: 'grid',\n      justifyContent: 'center'\n    },\n    children: articles.map((thought, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"drop-down\",\n        onClick: () => displayContent(index),\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: thought.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"chevron\",\n          style: {\n            marginLeft: 'auto'\n          },\n          children: \"\\u203A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"panel\",\n        children: /*#__PURE__*/_jsxDEV(thought.content, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 41\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_c3 = Thoughts;\nexport { Thoughts };\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"SwiftArticle\");\n$RefreshReg$(_c2, \"NilArticle\");\n$RefreshReg$(_c3, \"Thoughts\");","map":{"version":3,"names":["articles","title","content","SwiftArticle","NilArticle","_jsxDEV","children","style","color","fileName","_jsxFileName","lineNumber","columnNumber","_c","_c2","Thoughts","contentMaxHeight","displayContent","index","panels","document","getElementsByClassName","chevrons","classList","toggle","maxHeight","gap","paddingTop","display","justifyContent","map","thought","className","onClick","marginLeft","class","_c3","$RefreshReg$"],"sources":["/Users/braedenmeikle/Documents/repo/braeden-meikle-site/src/sections/thoughts.js"],"sourcesContent":["const articles = [\n  {\n    title: 'Swift is the best programming language',\n    content: SwiftArticle\n  },\n  {\n    title: 'Crashing the program is better than defaults',\n    content: NilArticle\n  }\n]\n\nfunction SwiftArticle() {\n  return (\n    <div>\n      <p style={{color: 'white'}}></p>\n    </div>\n  )\n}\n\nfunction NilArticle() {\n  return (\n    <div>\n      <p style={{color: 'white'}}>\n        Force unwrapping an optional is better than null coalescing where the latter is app-breaking.\n        It becomes almost subconscious to utilize null coalescing operators in languages with optionals\n        (Swift, Kotlin, Dart, C#, Rust, etc), but in most cases, \n      </p>\n    </div>\n  )\n}\n\nfunction Thoughts() {\n  const contentMaxHeight = '500px'\n\n  function displayContent(index) {\n    const panels = document.getElementsByClassName('panel')\n    const chevrons = document.getElementsByClassName('chevron')\n    chevrons[index].classList.toggle('rotate')\n    panels[index].style.maxHeight = panels[index].style.maxHeight === contentMaxHeight ? '0px' : contentMaxHeight\n    panels[index].classList.toggle('drop')\n  }\n\n  return (\n    <div style={{gap: '10px', paddingTop: '80px', display: 'grid', justifyContent: 'center'}}>\n      {articles.map((thought, index) => <div>\n        <button className='drop-down' onClick={() => displayContent(index)}>\n          <p>{thought.title}</p>\n          <span className='chevron' style={{marginLeft:'auto'}}>&rsaquo;</span>\n        </button>\n        <div class='panel'>\n          {<thought.content/>}\n        </div>\n      </div>)}\n    </div>\n  )\n}\n\nexport { Thoughts }"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}