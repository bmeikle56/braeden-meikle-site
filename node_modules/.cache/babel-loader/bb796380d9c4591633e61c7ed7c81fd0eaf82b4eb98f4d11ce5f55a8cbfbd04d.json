{"ast":null,"code":"var _jsxFileName = \"/Users/braedenmeikle/Documents/repo/braeden-meikle-site/src/components/Articles.js\";\nimport { markRead } from '../api.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst articles = [{\n  title: 'Swift = best programming language',\n  content: SwiftArticle\n}, {\n  title: 'Crashing the program is... fine?',\n  content: NilArticle\n}, {\n  title: `How I'd describe programming`,\n  content: ProgrammingArticle\n}, {\n  title: `My philosophy`,\n  content: PhilosophyByte\n}];\nfunction PhilosophyByte() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        lineHeight: 1.3,\n        whiteSpace: 'pre-wrap',\n        textWrap: 'wrap',\n        color: 'gray'\n      },\n      children: [/*#__PURE__*/_jsxDEV(BLi, {\n        txt: `Easy To Change (ETC)`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 5\n      }, this), \"A core concept of software is software rot (aka technical debt) tends toward infinity. Fundamentally, if a program or application is hard to change, it's worth trends toward zero over time.\", /*#__PURE__*/_jsxDEV(BLi, {\n        txt: `Keep It Simple, Stupid (KISS)`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this), \"Abstraction is a blessing and a curse. Early programmers bestoyed a responsibility on us when they described these patterns and tools. Use carefully, as abstraction can greatly increase development time when done well but can decrease development time when done poorly. Finding the right balance between abstraction and localization requires a special feel. Sometimes, KISS may mean violating Don't Repeat Yourself (DRY).\", /*#__PURE__*/_jsxDEV(BLi, {\n        txt: `Ya Aren't Gonna Need It (YAGNI)`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this), \"Until you actually need something, don't implement it. This is essentially a prioritization of work concern: there's always a feature, performance optimization, software rot, or equivalent piece of work more important than optimizing for a feature you may never use.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_c = PhilosophyByte;\nfunction ProgrammingArticle() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        lineHeight: 1.3,\n        textWrap: 'wrap',\n        color: 'gray'\n      },\n      children: [/*#__PURE__*/_jsxDEV(InCcode, {\n        code: `protocol `\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this), \"Programming\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n/* Big break component */\n_c2 = ProgrammingArticle;\nfunction BBr() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '4px'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 54\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 25\n  }, this);\n}\n\n/* Inline colored code component */\n_c3 = BBr;\nfunction InCcode({\n  code\n}) {\n  return /*#__PURE__*/_jsxDEV(\"pre\", {\n    style: {\n      margin: 'auto',\n      display: 'inline-block',\n      color: 'rgb(255,0,123)',\n      fontSize: '14px'\n    },\n    children: code\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 10\n  }, this);\n}\n_c4 = InCcode;\nfunction BLi({\n  txt\n}) {\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    style: {\n      lineHeight: '0.5',\n      fontWeight: 'bold'\n    },\n    children: [\"\\u21D2 \", txt]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 32\n  }, this);\n}\n_c5 = BLi;\nfunction SwiftArticle() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        lineHeight: 1.3,\n        textWrap: 'wrap',\n        color: 'gray'\n      },\n      children: [\"Features I like:\", /*#__PURE__*/_jsxDEV(BBr, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BLi, {\n        txt: 'default functions'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BBr, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InCcode, {\n        code: `protocol `\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), \"+\", /*#__PURE__*/_jsxDEV(InCcode, {\n        code: ` extension `\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 39\n      }, this), \"solves the multi-inheritance problem\", /*#__PURE__*/_jsxDEV(BBr, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BLi, {\n        txt: 'special early exit syntax'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InCcode, {\n        code: `guard let key = req?.key else { return } `\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), \"is just infinitely more intuitive/readable than if statements\", /*#__PURE__*/_jsxDEV(BBr, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BLi, {\n        txt: 'elegant optional handling'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InCcode, {\n        code: `prof.tas?.map { $0.account?.desposit(earnings) }`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), \"just look how elegant that is\", /*#__PURE__*/_jsxDEV(BBr, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BLi, {\n        txt: 'multi-paradigm nature'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BBr, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), \"Pros of OOP + functional programming with no cons\", /*#__PURE__*/_jsxDEV(BBr, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BLi, {\n        txt: 'no boilerplate'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), \"Seldom use \", /*#__PURE__*/_jsxDEV(InCcode, {\n        code: ` import `\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 20\n      }, this), \"+\", /*#__PURE__*/_jsxDEV(InCcode, {\n        code: ` ; `\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 49\n      }, this), \" and evolving syntactic sugar\", /*#__PURE__*/_jsxDEV(BLi, {\n        txt: 'access modifiers'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), \"Explicit access modifiers are better than arbitrary string formatting (plus a variety)\", /*#__PURE__*/_jsxDEV(BLi, {\n        txt: 'typing'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), \"Peak\", /*#__PURE__*/_jsxDEV(InCcode, {\n        code: ` Swift `\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this), \"feels like dynamic vars checked at compile\", /*#__PURE__*/_jsxDEV(BLi, {\n        txt: 'good async syntax'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), \"Succinct APIs + easy bridge to sync: \", /*#__PURE__*/_jsxDEV(InCcode, {\n        code: ` Task { ... } `\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 46\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_c6 = SwiftArticle;\nfunction NilArticle() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        lineHeight: 1.3,\n        textWrap: 'wrap',\n        color: 'gray'\n      },\n      children: [\"Force unwrapping an optional is better than null coalescing where the latter is app-breaking. Some shallow online digging may lead you to\\xA0\", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://forums.swift.org/t/moving-toward-deprecating-force-unwrap-from-swift/43455\",\n        target: \"_blank\",\n        className: \"article\",\n        rel: \"noreferrer\",\n        children: \"articles suggesting the deprecation of the operator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), \".\", /*#__PURE__*/_jsxDEV(BBr, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BBr, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(BBr, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(BBr, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 27\n      }, this), \"It becomes almost subconscious to use null coalescing operators in languages with optionals bridging an optional to a non-optional. The default values satisfy the compiler but create an explicity allowed corrupted state fallback. A corrupted state is where the user experience may be completely compromised.\", /*#__PURE__*/_jsxDEV(BBr, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BBr, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(BBr, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(BBr, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 27\n      }, this), \"A common argument against force unwrapping with\", /*#__PURE__*/_jsxDEV(InCcode, {\n        code: ` ! `\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 56\n      }, this), \"is that it's riskier (it is) and therefore we can prevent crashes in a highly-scaled application where edge-cases are more likely to occur.\", /*#__PURE__*/_jsxDEV(BBr, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BBr, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(BBr, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(BBr, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 27\n      }, this), \"The alternative: the default value is used and the app reaches a corrupted state. I refer to this scenario as a 'soft crash'.\", /*#__PURE__*/_jsxDEV(BBr, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BBr, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(BBr, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(BBr, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 27\n      }, this), \"While violent, a forced crash as opposed to a soft crash is mutually better for the application and user. Really, it's a safer of two evils choice. In a corrupted application state, users may be able to access information they should not have access to or harm the system.\", /*#__PURE__*/_jsxDEV(BBr, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BBr, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(BBr, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(BBr, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 27\n      }, this), \"Crashing is easier to catch in development, and if it reaches production, easier to patch as long as the application is deployed with a crash-logging service (i.e. Firebase).\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n_c7 = NilArticle;\nfunction Articles() {\n  const contentMaxHeight = '800px';\n  function displayContent(index) {\n    // toggle chevron animation\n    const chevrons = document.getElementsByClassName('chevron');\n    chevrons[index].classList.toggle('rotate');\n\n    // drop down content (animated)\n    const panels = document.getElementsByClassName('panel');\n    panels[index].style.maxHeight = panels[index].style.maxHeight === contentMaxHeight ? '0px' : contentMaxHeight;\n    panels[index].classList.toggle('drop');\n\n    // hide new badge once article is clicked for the first time\n    const newBadges = document.getElementsByClassName('new-badge');\n    newBadges[index].classList.toggle('fade');\n    newBadges[index].style.opacity = 0;\n    console.log('before');\n    markRead(index);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '50px 0 0 150px',\n      width: '70vw',\n      gap: '10px',\n      display: 'grid',\n      gridTemplateColumns: 'repeat(3, 1fr)'\n    },\n    children: articles.map((article, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {},\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"drop-down\",\n        onClick: () => displayContent(index),\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'rgb(160,160,160)',\n            textShadow: '0px 0px 10px rgb(46, 190, 238), 0px 0px 10px rgb(46, 190, 238), 0px 0px 10px rgb(46, 190, 238)',\n            paddingRight: '15px'\n          },\n          children: \"byte\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'gray'\n          },\n          children: article.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginLeft: 'auto',\n            display: 'flex',\n            gap: '12px',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"new-badge\",\n            style: {\n              color: 'rgb(0,255,0)',\n              fontSize: '10px'\n            },\n            children: \"New\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"chevron\",\n            style: {\n              margin: '-2px 0 0 0'\n            },\n            children: \"\\u203A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"panel\",\n        children: /*#__PURE__*/_jsxDEV(article.content, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 41\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n}\n_c8 = Articles;\nexport { Articles };\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n$RefreshReg$(_c, \"PhilosophyByte\");\n$RefreshReg$(_c2, \"ProgrammingArticle\");\n$RefreshReg$(_c3, \"BBr\");\n$RefreshReg$(_c4, \"InCcode\");\n$RefreshReg$(_c5, \"BLi\");\n$RefreshReg$(_c6, \"SwiftArticle\");\n$RefreshReg$(_c7, \"NilArticle\");\n$RefreshReg$(_c8, \"Articles\");","map":{"version":3,"names":["markRead","jsxDEV","_jsxDEV","articles","title","content","SwiftArticle","NilArticle","ProgrammingArticle","PhilosophyByte","children","style","lineHeight","whiteSpace","textWrap","color","BLi","txt","fileName","_jsxFileName","lineNumber","columnNumber","_c","InCcode","code","_c2","BBr","height","_c3","margin","display","fontSize","_c4","fontWeight","_c5","_c6","href","target","className","rel","_c7","Articles","contentMaxHeight","displayContent","index","chevrons","document","getElementsByClassName","classList","toggle","panels","maxHeight","newBadges","opacity","console","log","padding","width","gap","gridTemplateColumns","map","article","onClick","textShadow","paddingRight","marginLeft","alignItems","class","_c8","$RefreshReg$"],"sources":["/Users/braedenmeikle/Documents/repo/braeden-meikle-site/src/components/Articles.js"],"sourcesContent":["\nimport { markRead } from '../api.js'\n\nconst articles = [\n  {\n    title: 'Swift = best programming language',\n    content: SwiftArticle\n  },\n  {\n    title: 'Crashing the program is... fine?',\n    content: NilArticle\n  },\n  {\n    title: `How I'd describe programming`,\n    content: ProgrammingArticle\n  },\n  {\n    title: `My philosophy`,\n    content: PhilosophyByte\n  },\n]\n\nfunction PhilosophyByte() {\n  return (\n    <div>\n    <p style={{lineHeight: 1.3, whiteSpace:'pre-wrap', textWrap: 'wrap', color: 'gray'}}>\n    <BLi txt={`Easy To Change (ETC)`}/>\n      A core concept of software is software\n      rot (aka technical debt) tends toward infinity. Fundamentally, if a program \n      or application is hard to change, it's worth trends toward zero over time.\n      <BLi txt={`Keep It Simple, Stupid (KISS)`}/>\n      Abstraction is a blessing and a curse. Early programmers bestoyed a responsibility\n      on us when they described these patterns and tools. Use carefully, as abstraction\n      can greatly increase development time when done well but can decrease development\n      time when done poorly. Finding the right balance between abstraction and \n      localization requires a special feel. Sometimes, KISS may mean violating Don't \n      Repeat Yourself (DRY).\n      <BLi txt={`Ya Aren't Gonna Need It (YAGNI)`}/>\n      Until you actually need something, don't implement it. This is essentially a \n      prioritization of work concern: there's always a feature, performance optimization,\n      software rot, or equivalent piece of work more important than optimizing for a\n      feature you may never use.\n    </p>\n  </div>\n  )\n}\n\nfunction ProgrammingArticle() {\n  return (\n    <div>\n      <p style={{lineHeight: 1.3, textWrap: 'wrap', color: 'gray'}}>\n      <InCcode code={`protocol `}/>\n        Programming \n      </p>\n    </div>\n  )\n}\n\n/* Big break component */\nfunction BBr() { return <div style={{height: '4px'}}><br></br></div> }\n\n/* Inline colored code component */\nfunction InCcode({ code }) {\n  return <pre style={{margin:'auto', display:'inline-block', color: 'rgb(255,0,123)', fontSize:'14px'}}>{code}</pre>\n}\n\nfunction BLi({ txt }) { return <p style={{lineHeight:'0.5', fontWeight:'bold'}}>&rArr; {txt}</p> }\n\nfunction SwiftArticle() {\n  return (\n    <div>\n      <p style={{lineHeight: 1.3, textWrap: 'wrap', color: 'gray'}}>\n        Features I like:\n        <BBr/>\n        <BLi txt={'default functions'}/>\n        <BBr/>\n        <InCcode code={`protocol `}/>+<InCcode code={` extension `}/>\n        solves the multi-inheritance problem\n        <BBr/>\n        <BLi txt={'special early exit syntax'}/>\n        <InCcode code={`guard let key = req?.key else { return } `}/>\n        is just infinitely more intuitive/readable than if statements\n        <BBr/>\n        <BLi txt={'elegant optional handling'}/>\n        <InCcode code={`prof.tas?.map { $0.account?.desposit(earnings) }`}/>\n        just look how elegant that is\n        <BBr/>\n        <BLi txt={'multi-paradigm nature'}/>\n        <BBr/>\n        Pros of OOP + functional programming with no cons\n        <BBr/>\n        <BLi txt={'no boilerplate'}/>\n        Seldom use <InCcode code={` import `}/>+<InCcode code={` ; `}/> and evolving syntactic sugar\n        <BLi txt={'access modifiers'}/>\n        Explicit access modifiers are better than arbitrary string formatting (plus a variety)\n        <BLi txt={'typing'}/>\n        Peak<InCcode code={` Swift `}/>feels like dynamic vars checked at compile\n        <BLi txt={'good async syntax'}/>\n        Succinct APIs + easy bridge to sync: <InCcode code={` Task { ... } `}/>\n      </p>\n    </div>\n  )\n}\n\nfunction NilArticle() {\n  return (\n    <div>\n      <p style={{lineHeight: 1.3, textWrap: 'wrap', color: 'gray'}}>\n        Force unwrapping an optional is better than null coalescing where the latter is app-breaking. \n        Some shallow online digging may lead you to&nbsp;\n        <a href='https://forums.swift.org/t/moving-toward-deprecating-force-unwrap-from-swift/43455' \n        target='_blank' className='article' rel='noreferrer'>\n          articles suggesting the deprecation of the operator\n        </a>\n        .\n        <BBr/><BBr/><BBr/><BBr/>\n        It becomes almost subconscious to use null coalescing operators in languages with optionals \n        bridging an optional to a non-optional. The default values satisfy the compiler but create an \n        explicity allowed corrupted state fallback. A corrupted state is where the user experience \n        may be completely compromised. \n        <BBr/><BBr/><BBr/><BBr/>\n        A common argument against force unwrapping with<InCcode code={` ! `}/>is that it's riskier (it is) and therefore we can\n        prevent crashes in a highly-scaled application where edge-cases are more likely to occur. \n        <BBr/><BBr/><BBr/><BBr/>\n        The alternative: the default value is used and the app reaches a corrupted state. I refer to \n        this scenario as a 'soft crash'.\n        <BBr/><BBr/><BBr/><BBr/>\n        While violent, a forced crash as opposed to a soft crash is mutually better for the application\n        and user. Really, it's a safer of two evils choice. In a corrupted application state, users \n        may be able to access information they should not have access to or harm the system.\n        <BBr/><BBr/><BBr/><BBr/>\n        Crashing is easier to catch in development, and if it reaches production, easier to patch\n        as long as the application is deployed with a crash-logging service (i.e. Firebase).\n      </p>\n    </div>\n  )\n}\n\nfunction Articles() {\n  \n  const contentMaxHeight = '800px'\n\n  function displayContent(index) {\n    // toggle chevron animation\n    const chevrons = document.getElementsByClassName('chevron')\n    chevrons[index].classList.toggle('rotate')\n\n    // drop down content (animated)\n    const panels = document.getElementsByClassName('panel')\n    panels[index].style.maxHeight = panels[index].style.maxHeight === contentMaxHeight ? '0px' : contentMaxHeight\n    panels[index].classList.toggle('drop')\n\n    // hide new badge once article is clicked for the first time\n    const newBadges = document.getElementsByClassName('new-badge')\n    newBadges[index].classList.toggle('fade')\n    newBadges[index].style.opacity = 0\n    console.log('before')\n    markRead(index)\n  }\n\n  return (\n    <div style={{padding:'50px 0 0 150px', width: '70vw', gap: '10px', display: 'grid', gridTemplateColumns: 'repeat(3, 1fr)'}}>\n      {articles.map((article, index) => <div style={{}}>\n        <button className='drop-down' onClick={() => displayContent(index)}>\n        <p style={{\n          color: 'rgb(160,160,160)',\n          textShadow: '0px 0px 10px rgb(46, 190, 238), 0px 0px 10px rgb(46, 190, 238), 0px 0px 10px rgb(46, 190, 238)',\n          paddingRight: '15px'\n          }}>byte</p>\n          <p style={{color: 'gray'}}>{article.title}</p>\n          <div style={{marginLeft: 'auto', display: 'flex', gap: '12px', alignItems: 'center'}}>\n            <p className='new-badge' style={{color: 'rgb(0,255,0)', fontSize:'10px'}}>New</p>\n            <span className='chevron' style={{margin:'-2px 0 0 0'}}>&rsaquo;</span>\n          </div>\n        </button>\n        <div class='panel'>\n          {<article.content/>}\n        </div>\n      </div>)}\n    </div>\n  )\n}\n\nexport { Articles }"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}